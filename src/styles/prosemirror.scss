@media (min-width: 640px) {
  .ProseMirror {
    @apply px-12 py-4;
  }
}

.ProseMirror .is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: hsl(var(--muted-foreground));
  pointer-events: none;
  height: 0;
}
.ProseMirror .is-empty::before {
  content: attr(data-placeholder);
  float: left;
  color: var(--color-muted-foreground-light);
  pointer-events: none;
  height: 0;
}
.ProseMirror p.is-empty {
  color: var(--color-muted-foreground-light);
}
.ProseMirror li.is-empty, .ProseMirror ol.footnotes.is-empty {
  &:before {
    display: none;
  }
}
p.is-empty+div.node-toggleBlock:before {
  content: none !important;
}

/* Also hide placeholder when the paragraph is right before a toggle-block */
p[data-placeholder].is-empty:has(+ div.node-toggleBlock)::before {
  display: none !important;
}

/* Alternative selector for browsers that don't support :has */
div.node-toggleBlock~p[data-placeholder].is-empty:empty::before {
  display: none !important;
}


.ProseMirror ul.is-empty:not(.list-disc) {
  &:before {
    content: attr(data-placeholder);
    color: var(--color-muted-foreground-light);
    margin-left: 2.2rem;
    display: block;
  }
}
.ProseMirror ul.is-empty.list-disc, .ProseMirror ol.is-empty.list-decimal {
  &:before {
    content: attr(data-placeholder);
    color: var(--color-muted-foreground-light);
    position: relative;
    bottom: -6px;
    left: 6px;
    display: block;
  }
}

/* Custom image styles */

.ProseMirror img {
  transition: filter 0.1s ease-in-out;

  &:hover {
    cursor: pointer;
    filter: brightness(90%);
  }

  &.ProseMirror-selectednode {
    outline: 3px solid #5abbf7;
    filter: brightness(90%);
  }
}

.img-placeholder {
  position: relative;

  &:before {
    content: "";
    box-sizing: border-box;
    position: absolute;
    top: 50%;
    left: 50%;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    border: 3px solid var(--novel-stone-200);
    border-top-color: var(--novel-stone-800);
    animation: spinning 0.6s linear infinite;
  }
}

@keyframes spinning {
  to {
    transform: rotate(360deg);
  }
}

/* Custom TODO list checkboxes â€“ shoutout to this awesome tutorial: https://moderncss.dev/pure-css-custom-checkbox-style/ */


ul[data-type="taskList"] {
  li {
    position: relative;
    display: flex;

    &.is-empty {
      margin-left: 0em; /* reset when lists get shifted */
    }
    
    > label {
      margin-right: 0.2rem;
      user-select: none;
      flex-shrink: 0; /* Prevent the label from shrinking */
      position: relative; /* Ensure consistent positioning */
      width: 1.5em; /* Fixed width for the checkbox area */

    }
    
    > div {
      flex-grow: 1; /* Allow the content to take remaining space */
    }
  }
}

@media screen and (max-width: 768px) {
  ul[data-type="taskList"] li > label {
    margin-right: 0.5rem;
  }
}

ul[data-type="taskList"] li > label input[type="checkbox"] {
  -webkit-appearance: none;
  appearance: none;
  background-color: white;
  margin: 0;
  cursor: pointer;
  width: 1.2em;
  height: 1.2em;
  position: relative;
  top: 4px;
  border: 2px solid #e2e8f0;
  margin-right: 0.3rem;
  border-radius: 2px;

  &:hover {
    background-color: #f1f5f9;
  }

  &:active {
    background-color: #e2e8f0;
  }

  &:checked {
    background-color: #2563eb;
    border-color: #2563eb;
    
    &::before {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) scale(1);
      width: 0.65em;
      height: 0.65em;
      background-color: white;
      clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
    }
  }

  &::before {
    content: "";
    width: 0.65em;
    height: 0.65em;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0);
    transition: 120ms transform ease-in-out;
    background-color: white;
    transform-origin: center;
    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
  }
}

ul[data-type="taskList"] li[data-checked="true"] > div > p {
  color: var(--muted-foreground);
  text-decoration: line-through;
  text-decoration-thickness: 2px;
}

/* Overwrite tippy-box original max-width */

.tippy-box {
  /* max-width: 400px !important; */
}

.ProseMirror:not(.dragging) .ProseMirror-selectednode {
  /* this is the tiptap node selected for dragging */
  outline: none !important;
  /* background-color: var(--novel-highlight-blue); */
  transition: background-color 0.2s;
  box-shadow: none;
}

.drag-handle {
  position: fixed;
  opacity: 1;
  transition: opacity ease-in 0.2s;
  border-radius: 0.25rem;
  margin-left: -0.25rem;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 10' style='fill: rgba(0, 0, 0, 0.5)'%3E%3Cpath d='M3,2 C2.44771525,2 2,1.55228475 2,1 C2,0.44771525 2.44771525,0 3,0 C3.55228475,0 4,0.44771525 4,1 C4,1.55228475 3.55228475,2 3,2 Z M3,6 C2.44771525,6 2,5.55228475 2,5 C2,4.44771525 2.44771525,4 3,4 C3.55228475,4 4,4.44771525 4,5 C4,5.55228475 3.55228475,6 3,6 Z M3,10 C2.44771525,10 2,9.55228475 2,9 C2,8.44771525 2.44771525,8 3,8 C3.55228475,8 4,8.44771525 4,9 C4,9.55228475 3.55228475,10 3,10 Z M7,2 C6.44771525,2 6,1.55228475 6,1 C6,0.44771525 6.44771525,0 7,0 C7.55228475,0 8,0.44771525 8,1 C8,1.55228475 7.55228475,2 7,2 Z M7,6 C6.44771525,6 6,5.55228475 6,5 C6,4.44771525 6.44771525,4 7,4 C7.55228475,4 8,4.44771525 8,5 C8,5.55228475 7.55228475,6 7,6 Z M7,10 C6.44771525,10 6,9.55228475 6,9 C6,8.44771525 6.44771525,8 7,8 C7.55228475,8 8,8.44771525 8,9 C8,9.55228475 7.55228475,10 7,10 Z'%3E%3C/path%3E%3C/svg%3E");
  background-size: calc(0.5em + 0.375rem) calc(0.5em + 0.375rem);
  background-repeat: no-repeat;
  background-position: center;
  width: 1.2rem;
  height: 1.5rem;
  z-index: 50;
  cursor: grab;
  display: flex;
  align-items: center;

  &:hover {
    background-color: var(--novel-stone-100);
    transition: background-color 0.2s;
  }

  &:active {
    background-color: var(--novel-stone-200);
    transition: background-color 0.2s;
    cursor: grabbing;
  }

  &.hide {
    opacity: 0;
    pointer-events: none;
  }

  @media screen and (max-width: 600px) {
    display: none;
    pointer-events: none;
  }
}

.dark .drag-handle {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 10' style='fill: rgba(255, 255, 255, 0.5)'%3E%3Cpath d='M3,2 C2.44771525,2 2,1.55228475 2,1 C2,0.44771525 2.44771525,0 3,0 C3.55228475,0 4,0.44771525 4,1 C4,1.55228475 3.55228475,2 3,2 Z M3,6 C2.44771525,6 2,5.55228475 2,5 C2,4.44771525 2.44771525,4 3,4 C3.55228475,4 4,4.44771525 4,5 C4,5.55228475 3.55228475,6 3,6 Z M3,10 C2.44771525,10 2,9.55228475 2,9 C2,8.44771525 2.44771525,8 3,8 C3.55228475,8 4,8.44771525 4,9 C4,9.55228475 3.55228475,10 3,10 Z M7,2 C6.44771525,2 6,1.55228475 6,1 C6,0.44771525 6.44771525,0 7,0 C7.55228475,0 8,0.44771525 8,1 C8,1.55228475 7.55228475,2 7,2 Z M7,6 C6.44771525,6 6,5.55228475 6,5 C6,4.44771525 6.44771525,4 7,4 C7.55228475,4 8,4.44771525 8,5 C8,5.55228475 7.55228475,6 7,6 Z M7,10 C6.44771525,10 6,9.55228475 6,9 C6,8.44771525 6.44771525,8 7,8 C7.55228475,8 8,8.44771525 8,9 C8,9.55228475 7.55228475,10 7,10 Z'%3E%3C/path%3E%3C/svg%3E");
}

/* Plus Handle Styles - adding alongside drag handle styles */
.plus-handle {
  position: fixed;
  opacity: 1;
  transition: opacity ease-in 0.2s;
  border-radius: 0.25rem;
  margin-left: -0.8rem; /* Position to the left of the drag handle */
  background-color: #f1f5f9;
  width: 1.5rem;
  height: 1.5rem;
  z-index: 50;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;

  svg {
    width: 16px;
    height: 16px;
    stroke: #64748b;
  }

  &:hover {
    background-color: #e2e8f0;
    transition: background-color 0.2s;
  }

  &:active {
    background-color: #cbd5e1;
    transition: background-color 0.2s;
  }

  &.hide {
    opacity: 0;
    pointer-events: none;
  }

  @media screen and (max-width: 600px) {
    display: none;
    pointer-events: none;
  }
}

.dark .plus-handle {
  background-color: #334155;

  svg {
    stroke: #94a3b8;
  }

  &:hover {
    background-color: #475569;
  }

  &:active {
    background-color: #64748b;
  }
}


/* Custom Youtube Video CSS */
iframe {
  border: 8px solid #ffd00027;
  border-radius: 4px;
  min-width: 200px;
  min-height: 200px;
  display: block;
  outline: 0px solid transparent;
}

div[data-youtube-video] > iframe {
  cursor: move;
  aspect-ratio: 16 / 9;
  width: 100%;
}

.ProseMirror-selectednode iframe {
  transition: outline 0.15s;
  outline: 6px solid #fbbf24;
}

@media only screen and (max-width: 480px) {
  div[data-youtube-video] > iframe {
    max-height: 50px;
  }
}

@media only screen and (max-width: 720px) {
  div[data-youtube-video] > iframe {
    max-height: 100px;
  }
}

/* CSS for bold coloring and highlighting issue*/
span[style] > strong {
  color: inherit;
}

mark[style] > strong {
  color: inherit;
}

.ProseMirror { 
  ol.footnotes {
    margin-top: 20px;
    padding: 20px 0;
    list-style-type: decimal;
    padding-left: 20px;
  }

  ol.footnotes:has(li) {
    border-top: 1px solid black;
  }
}



/* 

  tw/typography changes / overrides

*/

.prose {
  width: 100%;
  min-width: 0px;
}

.prose:not(.toggle-block) :where(p):not(:where([class~=not-prose], [class~=not-prose] *)) {
  /* default is too tall for paragraphs */
  margin-bottom: 0.7rem;
  margin-top: 0.7rem;
}

/* Override margins in toggle blocks to use padding instead */
.toggle-block :where(p):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
  padding-top: 0.35rem;
  padding-bottom: 0.35rem;
}


/* Drag Handle Commands Styling */
.drag-handle-commands {
  border-radius: 6px;
  overflow: hidden;
  width: 220px;
  animation: commandsFadeIn 0.15s ease-in-out;
  transform-origin: top left;
  box-sizing: border-box;
  z-index: 1000; /* Ensure commands are above the hit area */
}

@keyframes commandsFadeIn {
  from {
    opacity: 0;
    transform: translateY(-5px) scale(0.98);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* Command styling enhancements */
.drag-handle-command {
  max-height: 320px;
  font-size: 0.9rem;
  width: 100%;
}

.drag-handle-command input {
  border-radius: 4px;
  margin: 8px;
  width: calc(100% - 16px) !important; /* Ensure input takes full width minus margins */
  padding: 6px 8px;
  font-size: 0.9rem;
  background: transparent !important;
  border: none !important;
  outline: none !important;
  box-shadow: none !important;
  box-sizing: border-box;
}

.drag-handle-command input:focus {
  outline: none !important;
  border: none !important;
  box-shadow: none !important;
}

.drag-handle-command [cmdk-list] {
  max-height: 260px;
  overflow-y: auto;
  padding: 4px;
  width: 100%;
  box-sizing: border-box;
}

/* Delete command styling */
.drag-handle-command [cmdk-item].text-red-500 {
  color: #ef4444;
}

.drag-handle-command [cmdk-item].text-red-500:hover,
.drag-handle-command [cmdk-item].text-red-500[data-selected="true"] {
  background-color: rgba(239, 68, 68, 0.1);
}

.drag-handle-command [cmdk-item] {
  cursor: pointer;
  border-radius: 4px;
  padding: 6px 8px;
  margin: 2px 0;
  display: flex;
  align-items: center;
  gap: 6px;
}

.drag-handle-command [cmdk-item][data-selected="true"] {
  background-color: var(--accent, #e2e8f0);
}

.drag-handle-command [cmdk-group-heading] {
  text-transform: uppercase;
  font-size: 0.7rem;
  color: var(--muted-foreground, #64748b);
  padding: 8px 8px 4px;
  font-weight: 500;
}

/* Dark mode specific styling */
.dark .drag-handle-command input {
  background: var(--input-background-dark, #1e293b);
  border-color: var(--border-dark, #334155);
}

.dark .drag-handle-command [cmdk-item][data-selected="true"] {
  background-color: var(--accent-dark, #334155);
}

/* Drag Handle Commands Wrapper and Hit Area */
.drag-handle-commands-wrapper {
  /* No visual styling needed, just container properties */
  position: absolute;
  pointer-events: auto;
}

.drag-handle-hit-area {
  pointer-events: auto; /* Captures mouse events */
  cursor: default; /* Default cursor to not confuse users */
}

/* For Notebook drag and drop */
.ProseMirror-dropcursor {
  position: absolute;
  border-top: 3px solid #68cef8;
  border-radius: 2px;
  pointer-events: none;
  margin-top: -1px;
  animation: dropCursorBlink 1.2s ease-in-out infinite;
}



















/* AI Selector Responsive Height Management */
.ai-selector {
  overflow: hidden;
  /* Ensure overflow control happens inside */
}

/* Ensure command list can scroll properly */
.ai-selector [data-slot="command-list"] {
  overflow-y: auto;
  /* Always allow vertical scrolling */
}

/* Specifically style the Threadgirl menu to allow proper scrolling */
.threadgirl-menu {
  display: flex;
  flex-direction: column;
}

/* Ensure the prompts container can scroll when there are many items */
.threadgirl-prompts-container {
  max-height: 40vh;
  /* This will be constrained by parent element's height */
  overflow-y: auto;
}

/* Add better scrollbar styling for WebKit browsers */
.threadgirl-prompts-container::-webkit-scrollbar {
  width: 6px;
}

.threadgirl-prompts-container::-webkit-scrollbar-track {
  background: transparent;
}

.threadgirl-prompts-container::-webkit-scrollbar-thumb {
  background-color: rgba(0, 0, 0, 0.2);
  border-radius: 3px;
}



/* 

  Toggle block classes

*/
/* Hides placeholder from parent toggle class when no content in the Toggle */
.node-toggleBlock.is-empty[data-placeholder]:before {
  display: none;
}

/* Empty toggle content placeholder - handle both truly empty and ProseMirror empty cases */
.toggle-content-editable.novel-toggle-content p:first-child {
  position: relative;
  border-bottom: 1px solid var(--border);
  margin-top: 0.5px;
  margin-bottom: 0.5rem;
}

/* Target both empty paragraphs and those with only a trailing break */
.toggle-content-editable.novel-toggle-content p:first-child.is-empty:before,
.toggle-content-editable.novel-toggle-content p:first-child:has(br.ProseMirror-trailingBreak):not(:has(* + br.ProseMirror-trailingBreak)):before {
  content: "Add a toggle title...";
  color: var(--color-muted-foreground-light);
  position: absolute;
  pointer-events: none;
}

/* For browsers that don't support :has */
.toggle-content-editable.novel-toggle-content p:first-child:empty:before {
  content: "Add content...";
  color: var(--color-muted-foreground-light);
  font-style: italic;
  position: absolute;
  pointer-events: none;
}

/* Toggle title styling */
.novel-toggle-content p.toggle-title {
  border-bottom: 1px solid var(--border);
  margin-top: 0.5px;
  margin-bottom: 0.5rem;
  font-weight: 600;
}

/* Empty toggle title placeholder */
.novel-toggle-content p.toggle-title.is-empty:before {
  content: "Add a title...";
  color: var(--color-muted-foreground-light);
  font-weight: normal;
  font-style: italic;
}

/* Style for the toggle content area */
.novel-toggle-content p:not(.toggle-title):first-of-type {
  margin-top: 0.5rem;
}